{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ikdf1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/loadTitle2DW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DL_TitleMaster",
								"type": "DatasetReference"
							},
							"name": "TitleFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DW_TitleMD",
								"type": "DatasetReference"
							},
							"name": "TitleMDTable"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> TitleFile",
						"TitleFile sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          TitleCode,",
						"          TitleDescription",
						"     )) ~> TitleMDTable"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregatePayrollData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DB_NYCPayroll",
								"type": "DatasetReference"
							},
							"name": "PayrollTableSQLDB"
						},
						{
							"dataset": {
								"referenceName": "DL_NYCPayrollHistory",
								"type": "DatasetReference"
							},
							"name": "PayrollHistoryFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DW_PayrollSummary",
								"type": "DatasetReference"
							},
							"name": "PayrollSummaryTableSA"
						}
					],
					"transformations": [
						{
							"name": "CombinePayrolls"
						},
						{
							"name": "FilterByYear"
						},
						{
							"name": "calculateTotalPaid"
						},
						{
							"name": "sumTotalPaid"
						}
					],
					"scriptLines": [
						"parameters{",
						"     fiscalYear as integer (2020)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> PayrollTableSQLDB",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PayrollHistoryFile",
						"PayrollHistoryFile, PayrollTableSQLDB union(byName: true)~> CombinePayrolls",
						"CombinePayrolls filter(FiscalYear>=$fiscalYear) ~> FilterByYear",
						"FilterByYear derive(TotalPaid = RegularGrossPaid+TotalOTPaid+TotalOtherPay) ~> calculateTotalPaid",
						"calculateTotalPaid aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     TotalPaid = sum(TotalPaid)) ~> sumTotalPaid",
						"sumTotalPaid sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          AgencyName,",
						"          TotalPaid",
						"     )) ~> PayrollSummaryTableSA"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadAllDataToDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Employee",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadEmployee2DW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeFile": {},
									"EmployeeMDTable": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "dl_ikusa1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "ikufs1/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Load Title",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadTitle2DW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TitleFile": {},
									"TitleMDTable": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "dl_ikusa1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "ikufs1/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Load Agency",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadAgency2DW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AgencyFile": {},
									"AgencyMDTable": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "dl_ikusa1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "ikufs1/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Load Payroll 2021",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadPayroll2021ToDW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PayrollTableSQLDB": {},
									"PayrollTableSA": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "dl_ikusa1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "ikufs1/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-05T20:38:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/loadTitle2DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadPayrollToSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load Payroll 2021 To SQL DB",
				"activities": [
					{
						"name": "LoadPayroll2021",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadPayrol2SQLDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PayrollFile": {},
									"PayrollTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-05T20:38:30Z"
			},
			"dependsOn": []
		}
	]
}